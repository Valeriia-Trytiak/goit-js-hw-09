{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA5CEQ,SAASC,cAAc,SAG/BC,iBAAiB,UAGoB,SAAvBC,GACnBA,EAAIC,iBAEJ,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,cAAcC,UAE9CJ,EAAMK,OAAS,GAAKJ,EAAKI,OAAS,GAAKH,EAAOG,OAAS,KACzDtB,EAAAuB,OAAOC,QAAQ,2CACZT,EAACU,OAAOC,SAGb,IAAIC,EAAiBC,OAAOX,EAAMK,OAC9BO,EAAgBD,OAAOV,EAAKI,OAGK,IAAhC,IAAIQ,EAAI,EAAGA,GAAKF,OAAOT,EAAOG,OAAQQ,GAAK,EACpC,IAANA,IACFH,GAAkBE,GAGpB3B,EAAc4B,EAAGH,GACdI,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAuB,OAAOS,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAEhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAuB,OAAOC,QAAQ,sBAAoBrB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// –∑–∞–±–∏—Ä–∞—é –µ–ª–µ–º–µ–Ω—Ç–∏ —Ñ–æ—Ä–º–∏\nconst formEl = document.querySelector('.form');\n\n// —Å–ª—É—Ö–∞—á –ø–æ–¥—ñ–π –Ω–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º–∏\nformEl.addEventListener('submit', onSubmitBtn);\n\n//—Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–±–∏—Ä–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –∑ —ñ–Ω–ø—É—Ç—ñ–≤ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–Ω–∏—Ö\nfunction onSubmitBtn(evt) {\n  evt.preventDefault();\n\n  const { delay, step, amount } = evt.currentTarget.elements;\n\n  if (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    Notify.failure(`üò° Please enter a number greater than 0`);\n    evt.target.reset();\n  }\n\n  let delayTimeInput = Number(delay.value);\n  let stepTimeInput = Number(step.value);\n\n  //–≤–∏–∫–ª–∏–∫–∞—é —Ñ—É–Ω–∫—Ü—ñ—é —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ–º—ñ—Å—ñ–≤ amount-—Ä–∞–∑—ñ–≤\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    if (i !== 1) {\n      delayTimeInput += stepTimeInput;\n    }\n\n    createPromise(i, delayTimeInput)\n      .then(({ position, delay }) => {\n        Notify.success(`‚úÖ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`‚ùå Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","delay1","step","amount","currentTarget","elements","value","Notify","failure","target","reset","delayTimeInput","Number","stepTimeInput","i","then","success","catch"],"version":3,"file":"03-promises.50535bac.js.map"}